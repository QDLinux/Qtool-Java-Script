public void 所爱隔山海(Object 汐)
{
if(读开关("开","隐藏艾特"))return;

if(故("加群")) {
    语("欢迎加入潮汐脚本官方交流小组 183611200");
}


if(故("查看黑名单"))
{
语(论(获取黑名单(),"null",""));
}

if(正则("设置违禁词(踢出|禁言\\d+[天|时|分|分钟|小时|秒]?|踢黑|拉黑|默认)"))
{
if(故始("设置违禁词禁言")&&度(汐.消息)>=8)
{
存(汐.群,"违禁词处理方式","禁言");
存(汐.群,"禁言时间",观(居_组(7)));
语("本群的违禁词处理方式更改为:\n禁言 "+时(居_组(7)));
return;
}
if(故始("设置违禁词踢")&& ! 故始("设置违禁词踢黑"))
{
存(汐.群,"违禁词处理方式","踢出");
语("本群的违禁词处理方式更改为:\n踢出群聊");
return;
}
if(故始("设置违禁词踢黑"))
{
存(汐.群,"违禁词处理方式","踢黑");
语("本群的违禁词处理方式更改为:\n踢出群聊并不再收到用户主动入群申请");
return;
}
if(故始("设置违禁词拉黑"))
{
存(汐.群,"违禁词处理方式","拉黑");
语("本群的违禁词处理方式更改为:\n踢出群聊并加入黑名单");
return;
}
if(故始("设置违禁词默认"))
{
存(汐.群,"违禁词处理方式",null);
语("已将本群为禁词处理方式设置为默认");
return;
}

else 语("没有设置任何的处理方式");
}



if(故("查看禁言列表"))
{
if(舞(禁言组(汐.群))==0)
{
回("本群暂无被禁言的人");
}
else 语(R_禁言组(汐.群));
}

if(正则("踢 ?[0-9]{4,10}+"))
{
踢(论(残花(1)," ",""));
语("QQ "+残花(1)+" 已踢出");
}

if(正则("踢黑 ?[0-9]{4,10}+"))
{
踢黑(论(残花(2)," ",""));
语("QQ "+残花(2)+" 已踢出本群并且不会再受到该用户的主动申请");
}

if(正则("解 ?[1-9]{0,2}+")&&度(汐.消息)>=2)
{
int QQ=取数(论(残花(1)," ",""))-1;
if(舞(禁言组(汐.群))<QQ)
{回("当前禁言人数不存在这么多");}else{
禁言(禁言组(汐.群).get(QQ),0);
语(禁言组(汐.群).get(QQ) + " 已解禁");}
}
if(正则("解[0-9]{4,10}"))
{
禁言(论(残花(1)," ",""),0);
}
if(故始("查黑@")) {
for(String 花 : 汐.艾特列表){
语(取(花));
}
}
if(正则("^查黑[0-9]{4,10}+$"))
{
String a=残花(2);
语(取(a));
}
if(故("开启退群拉黑"))
{
if(读开关("开","退群拉黑")){
语("退群拉黑功能已开启，无需重复开启");
return;}
else
存(汐.群,"退群拉黑","开");
语("本群退群拉黑功能已打开，退群将自动拉入全局黑名单");
}

if(故("关闭退群拉黑"))
{
if(读开关("开","退群拉黑"))
{
存(汐.群,"退群拉黑",null);
语("本群退群拉黑功能已关闭");
return;
}
else
语("尚未打开无法关闭");
}

if(故始("拉黑@")||故始("加黑@"))
{
String 列表 = "";
if(舞(汐.艾特列表)==0)
{
回("你艾特的人呢？");
return;}
if(汐.艾特列表.contains(MyUin))
{
语("不能将自己拉入黑名单");
return;}

//追写原因的话
if (故含("原因")) {
String 原因 = 残花(残("原因")+2);
for(String 千:汐.艾特列表)
{
简写(黑名单,千);
写如(千,"QQ"+千+" 于 "+getTime()+" 被 "+名(汐.用户)+"("+汐.用户+") 在群聊"+群名(汐.群)+"("+汐.群+")拉入黑名单"+"\n\n原因 : "+原因);
列表 = 列表 + 千 + " ";
踢黑(千);
}
语("QQ "+ 列表+" 已拉入全局黑名单，已自动踢出本群，下次加入本群会自动踢出");
}
//不追写原因else
else{
for(String 千:汐.艾特列表)
{
简写(黑名单,千);
写如(千,"QQ"+千+" 于 "+getTime()+" 被 "+名(汐.用户)+"("+汐.用户+") 在群聊"+群名(汐.群)+"("+汐.群+")拉入黑名单" );
列表 = 列表 + 千 + " ";
踢黑(千);
}
语("QQ "+ 列表+" 已拉入全局黑名单，已自动踢出本群，下次加入本群会自动踢出");return;}
}

if(故始("删黑@"))
{
String 列表="";
if(舞(汐.艾特列表)==0)
{
回("你艾特的人呢？");
return;}
for(String 千:汐.艾特列表)
{
if(!简读(千,简取(黑名单)))
{
语("列表中有人并不是黑名单");
return;
//break;
}
else
{
简弃(黑名单,千);
删(千);
列表=列表+千+" ";
}
}
语("QQ "+列表+" 的全局黑名单已删除");
return;
}

if(正则("拉黑\\d{4,10}(原因.*)?")||正则("加黑\\d{4,10}(原因.*)?"))
{
String 雾草=论(残花(2)," ","");

if(简读(雾草,简取(黑名单)))
{
语("此人已是黑名单");
}
else if(含(雾草,MyUin))
{
语("不能将自己加入黑名单");
return;
}
else if(故含("原因"))
{
String 雾花 = 残花(2,残("原"));
String 原因 = 残花(残("原因")+2);
简写(黑名单,雾花);
写如(雾花,"QQ"+雾花+" 于 "+getTime()+" 被 "+名(汐.用户)+"("+汐.用户+") 在群聊"+群名(汐.群)+"("+汐.群+")拉入黑名单"+"\n\n原因 : "+原因);
列表 = 列表 + 雾花 + " ";
踢黑(雾花);
语("QQ "+ 雾花 +" 已拉入全局黑名单，已自动踢出本群，下次加入本群会自动踢出");
}

else if(正则(雾草,"[0-9]+"))
{
简写(黑名单,雾草);
语("QQ "+雾草+" 已加入全局黑名单");
写如(雾草,"QQ"+雾草+" 于 "+getTime()+" 被 "+名(汐.用户)+"("+汐.用户+")在群聊"+群名(汐.群)+"("+汐.群+")拉入黑名单" );
缓冲(50);
踢黑(雾草);
return;
}

}

if(故始("删黑"))
{
String 雾草=论(残花(2)," ","");

if(!正则(雾草,"[0-9]+") )
{
语("正确方式 : 删黑+Q号，请不要输入别的字府");
return;
}
if(简读(雾草,简取(黑名单)))
{
简弃(黑名单,雾草);
删(雾草);
语("已删除 "+雾草+" 的黑名单");
return;
}
else
语("此人并不是黑名单");
return;
}




if(故("清空黑名单"))
{
全弃(黑名单);
全删();
语("黑名单已全部清空");
}

if(故("我要百度")) {
String url="https://www.baidu.com";
TC(url);
}
if(故始("访问链接")){
String url=残花(4);
TC(url);
}
if(故始("设置艾特回复"))
{
String 文=残花(6);
if(等(文,""))
{
语("正确姿势: 设置艾特回复(内容)");
return;
}
else
存("艾特回","开关","开");
缓冲(50);
语("已开启艾特回复，应用范围［所有已开机的群］");
存("艾特回复","回复内容",文);
缓冲(50);
语("已设置艾特回复内容 "+ 文);
}
if(故始("关闭艾特回复"))
{
存("艾特回","开关",null);
存("艾特回复","回复内容",null);
缓冲(100);
语("已关闭艾特回复并清空回复词");
}
if(故("开启投票禁言"))
{
	if(读开关("1","秩"))
	{
      语("投票禁言已开启，无需重复开启");
      return;
	}
	else
	存(汐.群,"秩","1");
	语("秩河-投票禁言开启成功 \n指令：\n设置禁言时间\n设置投票次数\n设置投票时间\n投票禁言@\n投票赞成\n中止投票 \n默认三票禁言五分钟");
	
	}
if(故("关闭投票禁言"))
{
if(读开关("1","秩"))
{
存(汐.群,"秩",null);
语("本群的投票禁言已关闭 你们别想再禁言别人了!");
return;
}
else
语("投票禁言未开启无法关闭");
}
if(故("开启自助头衔"))
{
if(读开关("开","自助头衔"))
{
语("本群的自助头衔打开过了");
return;
}
else
存(汐.群,"自助头衔","开");
语("本群的自助头衔已开启,大家可以发送我要头衔(头衔内容) 来获取头衔");
}
if(故("关闭自助头衔"))
{
if(读开关("开","自助头衔"))
{
存(汐.群,"自助头衔","关");;
语("本群的自助头衔已关闭，你们不要再发我要头衔了!");
return;
}
else
语("未打开自助头衔无法关闭。");
}


if(故("开启防止封群"))
{
if(读关开("防止封群"))
{
回("本群的防止封群已经开过了");
return;
}
else
存(汐.群,"防止封群",null);
语("已开启本群防止封群，将模糊匹配相关违禁词并禁言");
}
if(故("关闭防止封群"))
{
if(读关开("防止封群"))
{
存(汐.群,"防止封群","关");
语("已关闭本群的防止封群");
return;
}
else
回("本群的防止封群未开启，不能关闭");
}

if(故("开启防止炸群"))
{
if(读关开("防止炸群"))
{
回("本群的防止炸群已经开过了");
return;
}
else
存(汐.群,"防止炸群",null);
语("已开启本群防止炸群，将模糊匹配关键词并禁言");
}
if(故("关闭防止炸群"))
{
if(读关开("防止炸群"))
{
存(汐.群,"防止炸群","关");
语("已关闭本群的防止炸群");
return;
}
else
回("本群的防止炸群未开启，不能关闭");
}


if(秋(MyUin))/*防止有苟代管恶意删除添加别的代管*/
{
if(故始("添加代管@")||故始("添加管理员@")||故始("设置代管@"))
{
String 列表 = "";
if(舞(汐.艾特列表)==0)
{
回("你艾特的人呢？");
return;}
for(String 千:汐.艾特列表)
{
if(简读(千,简取(代管)))
{
语("列表内已经有人是代管了");
return;
}
else
简写(代管,千);
列表 = 列表 + 千 + " ";
}
语("已添加管理员:\n"+列表);
}

if(故始("删除代管@")||故始("删除管理员@"))
{
String 列表="";
if(舞(汐.艾特列表)==0)
{
回("你艾特的人呢？");
return;}
for(String 千:汐.艾特列表)
{
if(简读(千,简取(代管)))
{
简弃(代管,千);
列表 = 列表 + 千 + " ";
语("已删除管理员:\n"+列表);return;
}
}
语("此人并不是代管");
return;
}

if(故始("删除代管")||故始("删除管理员"))
{
String 列表="";
String 千=残舞(论(残花(4)," ",""),"[\u4e00-\u9fa5]");
{
if(!正则(千,"[0-9]+") )
{
语("正确方式 : 删除代管+Q号，请不要输入别的字府");
return;
}
if(!简读(千,简取(代管)))
{
语("此人并不是代管");
return;
}
else
简弃(代管,千);
列表 = 列表 + 千 + " ";
}
语("已删除管理员:\n"+列表);
return;
}
}


if(故始("查看代管")&&故里(6)||故("查看管理员列表"))
{
String 代=组名(简取(代管));
String 代管=论(代,"]","");
String 管列表=论(代管,"["," ");
语("当前的管理员列表如下:\n"+管列表);
}
if(故("清空代管")||故("清空管理员"))
{
全弃(代管);
语("已清空所有的代管");
}

if(故始("添加违禁词")||故始("设置违禁词"))
{
String 文=残花(5);
String 文本=论(文," ","");
if(等(文本,""))
{
语("都不说要设置什么违禁词，搁这卡bug呢");
return;
}
if(简读文本(违禁词,文本))
{
语("违禁词[ "+文本+" ]已经设置过了");
return;
}
if(正则(文本,"[`~!@#$%^&*()+=|{}':;',\\[\\].<>/?~！@#￥%……&;*（）꯭——+|{}【】‘；：”“’。，、？|-]"))
{
回("不能在违禁词中添加符号");
return;
}

else
简写(违禁词,文本);
语("已添加违禁词:"+文本);
}
if(故始("删除违禁词"))
{
String 文=残花(5);
String 文本=论(文," ","");
if(等(文本,""))
{
语("都不说要删什么违禁词，你搁这卡bug呢");
}
if(简读文本(违禁词,文本))
{
简弃(违禁词,文本);
语("已删除违禁词: "+文本);
}
else
语("违禁词列表内没有[ "+文本+" ],不能删除");
}
if(故始("查看违禁词")&&故里(8))
{
String 词=观(简取(违禁词));
String 禁词=论(词,"]","");
String 违禁词=论(禁词,"[","");
String 处理方式 = getString(汐.群,"违禁词处理方式");
if(处理方式 == null) 处理方式 = "默认 : 禁言20分钟";
else 处理方式 = "本群的违禁词处理方式为 : "+处理方式;
语("当前的违禁词如下:\n"+违禁词+"\n\n\n"+处理方式+"\n发送设置违禁词+禁言|踢出|踢黑|拉黑|默认 以设置处理方式");
}
if(故("清空违禁词"))
{
全弃(违禁词);
语("当前的违禁词已全部请空");
}



 if (故始("禁@"))
{		
if(舞(汐.艾特列表)==0)
{
回("你艾特的人呢？");
return;}					
if(正则("禁 ?@[\\s\\S]+[0-9](天|分|时|小时|分钟|秒)"))
{
  int 花 = 残(" ");
String 嘿嘿 =残舞(残花(花 + 1),"[天分时小时分钟秒]");
int 间=久恋(嘿嘿);

if(组(汐,间)>=60*60*24*30+1)
{
语("禁言时间太长无法禁言");return;
}
else{
String 列表="";
for(String u:汐.艾特列表)
{
禁言(u,组(汐));
列表=列表+u+" ";
}
if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
语("已将 "+列表+"禁言 " + 时(组(汐)));}
return;
}

if(正则("禁 ?@[\\s\\S]+[零一二三四五六七八九十]?[十百千万]?(天|分|时|小时|分钟|秒)"))
{
String 列表="";
int 花 = 残(" ");
String 嘿嘿 =残舞(残花(花 + 1),"[天分时小时分钟秒]");
int 间=久恋(嘿嘿);

if(组(汐,间)>=60*60*24*30+1)
{
语("禁言时间太长无法禁言");return;
}
else{
for(String u:汐.艾特列表)
{
禁言(u,组(汐,间));
列表=列表+u+" ";
}
if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
语("已将 "+列表+"禁言 " + 时(组(汐,间)));
return;}
}
		
		
 if(!Character.isDigit(汐.消息.charAt(度(汐.消息) - 1)))
		{
		String 列表 = "";
		int 月=60*60*24*30;
for(String 千:汐.艾特列表)
			{
	禁言(千,月);
	列表 = 列表 + 千 + " ";
		}
if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
	语("QQ "+列表+" 已被禁言一个月");
		return;
		}
		else  
		{
			int 花 =残(" ");
			String 时1 =残花(花 + 1);
		 int 时2=取数(时1);  
         int 间=时2*60;
			String 列表 = "";
			for(String 千:汐.艾特列表)
			{
				禁言(千, 间);
				列表 = 列表 + 千 + " ";
			}
			if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
			语("QQ "+列表+" 已被禁言 "+时(间));
			}
}

 if (故始("禁言@"))
		{		
if(舞(汐.艾特列表)==0)
{
回("你艾特的人呢？");
return;}

if(正则("禁言 ?@[\\s\\S]+[0-9]+(天|分|时|小时|分钟|秒)"))
{
if(组(汐)>=60*60*24*30+1)
{
语("禁言时间太长无法禁言");return;
}
else{
String 列表="";
for(String u:汐.艾特列表)
{
禁言(u,组(汐));
列表=列表+u+" ";
}
if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
语("已将 "+列表+"禁言 " + 时(组(汐)));}
return;
}

 if(正则("禁言 ?@[\\s\\S]+[零一二三四五六七八九十]?[十百千万]?(天|分|时|小时|分钟|秒)"))
{
String 列表="";
int 花 = 残(" ");
String 嘿嘿 =残舞(残花(花 + 1),"[天分时小时分钟秒]");
int 间=久恋(嘿嘿);

if(组(汐,间)>=60*60*24*30+1)
{
语("禁言时间太长无法禁言");return;
}
else{
for(String u:汐.艾特列表)
{
禁言(u,组(汐,间));
列表=列表+u+" ";
}
if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
语("已将 "+列表+"禁言 " + 时(组(汐,间)));
return;}
}
	
 if(!Character.isDigit(汐.消息.charAt(度(汐.消息) - 1)))
		{
		String 列表 = "";
		int 天=60*60*24;
for(String 千:汐.艾特列表)
			{
	
	禁言(千,天);
	列表 = 列表 + 千 + " ";
		}
	if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
	语("QQ "+列表+" 已被禁言 "+时(天));
		
		}
		else  
		{
int 花 = 残(" ");
String 时1 = 残花(花 + 1);
		 int 间=取数(时1);  

			String 列表 = "";
			for(String 千:汐.艾特列表)
			{
				禁言(千, 间);
				列表 = 列表 + 千 + " ";
			}
if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
			语("QQ "+列表+" 已被禁言"+时(间));
			}
}
	 if(故始("解@")||故始("解禁@"))
   { 
   
   	String 列表="";
    for(String 千:汐.艾特列表)
    {  
        禁言(千,0);//简    
        列表= 列表+千+" ";
    } 
   if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
   语("QQ "+列表+ "已解禁");
    return; 
    }
	
 if(故始("踢黑@")&&舞(汐.艾特列表)>=1)
{
String 列表 = "";
  for(String 千:汐.艾特列表)
    {
       踢黑(千);
       列表 = 列表 + 千 + " ";
       }
       语("QQ "+列表+" 已踢出本群并且不会再收到以上用户的群申请");
       return;
}	

 if(故始("踢@")&&舞(汐.艾特列表)>=1)        
    {
    String 列表 = "";
    for(String 千:汐.艾特列表)
    {
踢(千);
列表 = 列表 + 千 + " ";
       }
     语("QQ "+列表+" 已踢出本群");    
       return;
}

 	if(故("禁"))
		{	
	全体禁言();return;
		}
    if(故("解"))		
	{
	全体解禁();return;
		}
if(故始("头衔@"))
{    	
if(!是否群主(汐.群))
{
语("非本群群主没有此操作权限");
}
else{

		int 花 = 残(" ")+1;
			String 风 = 残花(花); 
  String 列表="";
    for(String 千:汐.艾特列表)
		{
			头衔(千,风);
			列表=列表+千+" ";
		}
if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
		语("已设置头衔"+列表+"\n<"+风+">");
		}
	}
	      if(故("全解"))
            {
       Object list=getForbiddenList(汐.群);
              if(list==null||list.size()==0) {
              回( "当前没有人被禁言");
              }
                else
                {
                    for(Object ForbiddenList:list)
                    {
     Forbidden(汐.群, ForbiddenList.UserUin+"", 0);
                    }
if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
                    回("禁言列表已解禁");
                }
            }

      if(故("全禁"))
            {
       Object list=getForbiddenList(汐.群);
              if(list==null||list.size()==0) {
              回( "当前没有人被禁言");
              }
                else
                {
                    for(Object ForbiddenList:list)
                    {
       Forbidden(汐.群, ForbiddenList.UserUin+"", 60*60*24*30);
                    }
	if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
                    语("禁言列表已加倍禁言");
                }
            }
          if(故("#踢禁言"))
            {
       Object list=getForbiddenList(汐.群);
              if(list==null||list.size()==0) {
              回( "当前没有人被禁言");
              }
                else
                {
                String st5 = "";
                    for(Object ForbiddenList:list)
                    {
       踢(ForbiddenList.UserUin);
       st5+="\n"+ForbiddenList.UserUin;
                    }
                    语("禁言列表已踢出 \n"+st5);
                }
            }
            
if(正则("^@[\\s\\S]+[0-9]+(天|分|时|小时|分钟|秒)+$"))
{
int i=组(汐);
if(i>=60*60*24*30+1)
{
回("禁言时间过长，已自动降低到一个月");
for(String u:汐.艾特列表)
{
禁言(u,60*60*24*30);
列表=列表+u+" ";
}
return;
}
else{
String 列表="";
for(String u:汐.艾特列表)
{
禁言(u,组(汐));
列表=列表+u+" ";
}
if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
语("已将 "+列表+"禁言 " + 时(组(汐)));}
return;
}

if(正则("^@?[\\s\\S]+[零一二三四五六七八九十]+[十百千万]?(天|分|时|小时|分钟|秒)+$"))
{
String 列表="";
int 花 = 残(" ");
String 嘿嘿 = 残花(花 + 1).replaceAll("[天分时小时分钟秒]","");
int 间=久恋(嘿嘿);

if(组(汐,间)>=60*60*24*30+1)
{
语("禁言时间太长无法禁言");return;
}
else{
for(String u:汐.艾特列表)
{
禁言(u,组(汐,间));
列表=列表+u+" ";
}
if(简读开关(管理操作)||等("关",读("全局1","管理操作提示")))return;
语("已将 "+列表+"禁言 " + 时(组(汐,间)));
return;}
}

if(故始("上管理@")&&秋(已))
{
String 列表="";
if(是否群主(汐.群))
{
for(String 千:汐.艾特列表)
{
//String qq = 汐.msg.AtList[0];
SetTroopAdmin(汐.群,千,1);列表 = 列表 + 千 + " ";}
语("已将 QQ "+列表+" 添加为本群管理员");
return;
}
if(!是否群主(汐.群))
{
回("添加管理失败! 不是本群群主");return;
}
}

if(故始("下管理@")&&秋(已))
{
String 列表="";
if(是否群主(汐.群))
{
for(String 千:汐.艾特列表)
{
//String qq = 汐.msg.AtList[0];
SetTroopAdmin(汐.群,千,0);列表 = 列表 + 千 + " ";}
语("已将 QQ "+列表+" 从本群的管理组移出");
return;
}
if(!是否群主(汐.群))
{
回("移除管理组失败! 不是本群群主");return;
}
}


		if(故始("查黑名单"))
{
	new Thread(new Runnable()
				{
					public void run()
					{
						try
						{
							String blackHere = "";
	for (Object target : getGroupMemberList(汐.群))
							{
								if (target.UserUin.equals(MyUin))
									continue;//略过自己 QQ
		else if (简取(黑名单).contains(target.UserUin))
								{
					blackHere += target.UserUin + "\n";
			{
		if (汐.消息.contains("禁") )
		{
		禁言(汐.群,target.UserUin, 1296000);
		语("已禁言黑名单成员"+target.UserUin); }	
	 if (汐.消息.contains("踢"))
	 {
		Kick(汐.群, target.UserUin, false);
		语("已踢出黑名单成员"+target.UserUin);
		}
									}
								}
							}
							if (度(blackHere) == 0)
								回( "本群暂未发现黑名单成员。");
							else
							{
								blackHere = blackHere.substring(0, 度(blackHere) - 1);
								String[] blackH = blackHere.split("\n");
								blackHere += "\n\n以上 " + blackH.length + " 位群成员位于黑名单中。";
								
									blackHere += "\n请以上黑名单中的成员自觉退出该群，如有误报请在群内反馈。";
								
									语( blackHere);
							}
						}
						catch (Throwable suberror)
						{
							Toast(  " 潮汐 子线程于 查黑名单 处发生异常，抛出异常信息如下：\n" + suberror);
						}
					}
				}).start();
}

}