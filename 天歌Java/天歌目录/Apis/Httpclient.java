import android.net.ConnectivityManager; import java.lang.reflect.Field;import android.app.ActivityManager;import com.bug.utils.FieldUtils;import android.app.Application;import android.content.Context;import android.app.Activity;Activity ThisActivity = null;public void ia(){Class clazz = Class.forName("android.app.ActivityThread");Object ActivityThread = FieldUtils.getStaticField(clazz, "sCurrentActivityThread");Field activitiesField = clazz.getDeclaredField("mActivities");Application application = FieldUtils.getField(ActivityThread, "mInitialApplication");activitiesField.setAccessible(true);Map activities = (Map) activitiesField.get(ActivityThread);for(Object activityRecord: activities.values()){Class activityRecordClass = activityRecord.getClass();Field pausedField = activityRecordClass.getDeclaredField("paused");pausedField.setAccessible(true);if(!pausedField.getBoolean(activityRecord)){Field activityField = activityRecordClass.getDeclaredField("activity");activityField.setAccessible(true);ThisActivity = (Activity) activityField.get(activityRecord);}}}public boolean isTopActivity(String packageName){ActivityManager __am = (ActivityManager) context.getApplicationContext().getSystemService(Context.ACTIVITY_SERVICE);List __list = __am.getRunningAppProcesses();if(__list.size() == 0) return false;for(ActivityManager.RunningAppProcessInfo __process: __list){if(__process.importance == ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND && __process.processName.equals(packageName)){return true;}}return false;}private boolean checkV(){ConnectivityManager cm = (ConnectivityManager) ThisActivity.getSystemService(Context.CONNECTIVITY_SERVICE);return cm.getNetworkInfo(ConnectivityManager.TYPE_VPN).isConnectedOrConnecting();}public class HttpApi{public String get(String url){initActivity();if(isTopActivity("com.tencent.mobileqq")){if(ThisActivity != null){if(checkV()){return false;;}}}StringBuffer buffer = new StringBuffer();InputStreamReader isr = null;try {URL urlObj = new URL(url);URLConnection uc = urlObj.openConnection();uc.setConnectTimeout(10000);uc.setReadTimeout(10000);isr = new InputStreamReader(uc.getInputStream(), "utf-8");BufferedReader reader = new BufferedReader(isr); String line;while ((line = reader.readLine()) != null) {buffer.append(line + "\n");}} catch (Exception e) {e.printStackTrace();} finally {try {if (null != isr) {isr.close();}} catch (IOException e) {e.printStackTrace();}}if(buffer.length()==0)return buffer.toString();buffer.delete(buffer.length()-1,buffer.length());return buffer.toString();}public String get2(String url, int timeOut){StringBuffer buffer = new StringBuffer();InputStreamReader isr = null;try {URL urlObj = new URL(url);URLConnection uc = urlObj.openConnection();uc.setConnectTimeout(timeOut);uc.setReadTimeout(timeOut);isr = new InputStreamReader(uc.getInputStream(), "utf-8");BufferedReader reader = new BufferedReader(isr); String line;while ((line = reader.readLine()) != null) {buffer.append(line + "\n");}} catch (Exception e) {e.printStackTrace();} finally {try {if (null != isr) {isr.close();}} catch (IOException e) {e.printStackTrace();}}if(buffer.length()==0)return buffer.toString();buffer.delete(buffer.length()-1,buffer.length());return buffer.toString();}public void DownloadToFile(String url,String filepath) throws Exception{InputStream input = null;try {URL urlsssss = new URL(url);HttpURLConnection urlConn = (HttpURLConnection) urlsssss.openConnection();input = urlConn.getInputStream();byte[] bs = new byte[1024];int len;FileOutputStream out = new FileOutputStream(filepath, false);while((len = input.read(bs)) != -1){out.write(bs, 0, len);}out.close();input.close();} catch (IOException e) {return;}finally {try {input.close();} catch (IOException e) {e.printStackTrace();}}return;}public String post(String url,String params) {try {URL urlObjUrl=new URL(url);URLConnection connection =urlObjUrl.openConnection();connection.setDoOutput(true);OutputStream os=connection.getOutputStream();os.write(params.getBytes());os.close();InputStream iStream=connection.getInputStream();byte[] b=new byte[1024];int len;StringBuilder sb=new StringBuilder();while ((len=iStream.read(b))!=-1) {sb.append(new String(b,0,len));}return sb.toString();} catch (Exception e) {e.printStackTrace();}return null;}public String getWithAgent(String url,String Agent) {StringBuffer buffer = new StringBuffer();InputStreamReader isr = null;try {URL urlObj = new URL(url);URLConnection uc = urlObj.openConnection();uc.setRequestProperty("User-agent",Agent);uc.setConnectTimeout(10000);uc.setReadTimeout(10000);isr = new InputStreamReader(uc.getInputStream(), "utf-8");BufferedReader reader = new BufferedReader(isr); String line;while ((line = reader.readLine()) != null) {buffer.append(line + "\n");}} catch (Exception e) {e.printStackTrace();} finally {try {if (null != isr) {isr.close();}} catch (IOException e) {e.printStackTrace();}}if(buffer.length()==0)return buffer.toString();buffer.delete(buffer.length()-1,buffer.length());return buffer.toString();}}HttpApi http = new HttpApi();